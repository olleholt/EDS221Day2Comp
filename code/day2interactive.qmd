---
title: "Day2InteractiveLessons"
format: html
editor: visual
execute: 
  warning: false
---

## Making and Indexing data in R

### Vectors

#### Making Vectors

```{r}
dogs <- c("teddy","khora","waffle","banjo","tallie","homer","kona")

# check the class of dogs
typeof(dogs)
class(dogs)
```

```{r}
my_breakfast <- c("waffles", 2, TRUE, "coffee")
typeof(my_breakfast)
#the entire vector gets stored as a character because it can only be one type class
class(my_breakfast)
```

```{r}
weights <- c(50, 60, 25, 35, 55, 65)
typeof(weights)
class(weights)
#typeof shows its stored as a double (can have decimals)
#class shows its stored as numeric
#to force it to be integer values put L at the end of each number

weights_integer <- c(50L, 60L, 25L, 35L, 55L, 65L)

typeof(weights_integer)
class(weights_integer)
```

```{r}
is.numeric(weights)
```

```{r}
zipcodes <- c(93105, 93514, 93101, 93401)
class(zipcodes)
#considers them numeric, zipcodes are a category, not a measure
#use as. family of functions to recast data classes
#use is. family of functions to ask what class something is
zipcodes_chr <- as.character(zipcodes)
zipcodes_chr
```

## Create a vector with named elements

```{r}
dog_food <- c(teddy = "purina", khora = "alpo", waffle = "fancy feast", banjo = "blue diamond", tallie = "farmers dog", homer = "farmer purina dog")

test <- c(cat = 4, dog = 10, elephant = 11)
class(test)
```

```{r}
dog_food[2]
#R uses a 1-index
#python and javascript use 0-indexing
```

```{r}
dog_food["khora"]
```

Access ranges of values in a vector

Use : to refer to a range (low : high)

```{r}
trees <- c("ponderosa", "lodgepole", "jeffrey", "sugar", "white", "bristlecone")

trees[3]

trees[3:5]
```

## Warm-up for for loops

```{r}
i <- 4
trees[i]
```

```{r}
i <- seq(1:3) #seq(from=1,to=3)
trees[i]
```

```{r}
trees[3] <- "oak"
#reassigned the value based on the position
trees
```

## Matrix indexing

```{r}
fish_size <- matrix(c(0.8,1.2,0.4,0.9), ncol = 2, nrow = 2, byrow = FALSE)

fish_size

class(fish_size)
str(fish_size)
typeof(fish_size)

fish_size[2,2]

fish_size[,2] #keep all of the rows by blank input

```

## Lists
